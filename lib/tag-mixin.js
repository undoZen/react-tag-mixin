// Generated by IcedCoffeeScript 1.7.1-f
var React, TagMixin, exports,
  __slice = [].slice;

React = require('react');

exports = module.exports = TagMixin = {};

Object.keys(React.DOM).forEach(function(tag) {
  return TagMixin[tag] = function() {
    var children, props, _ref;
    props = arguments[0], children = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    if (typeof props === 'string' && ((_ref = props[0]) === '.' || _ref === '#')) {
      if (props.indexOf('#') > -1) {
        props = (function() {
          var className, id;
          id = '';
          className = '';
          props.split('.').reverse().forEach(function(c) {
            var _c, _id, _ref1;
            _ref1 = c.split('#'), _c = _ref1[0], _id = _ref1[1];
            if (!_c && !_id) {
              return;
            }
            className = _c + ' ' + className;
            if (_id) {
              return id = _id;
            }
          });
          className = className.trim();
          return {
            id: id,
            className: className
          };
        })();
      } else {
        props = {
          className: props.replace(/\.+/g, ' ').trim()
        };
      }
    }
    if (typeof props !== 'object' || React.isValidComponent(props)) {
      children.unshift(props);
      props = null;
    }
    return React.DOM[tag].apply(React.DOM, [props].concat(children));
  };
});
